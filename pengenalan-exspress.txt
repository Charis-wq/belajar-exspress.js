ExspressJS
exspresjs adalah salah satu web framework opensource paling populer di nodejs
exspressjs pertama kali di buat pasa tahun 2010 dan karena sangat populer exspressjs sekarang sudah menjadi hal yang wajib dikuasai ketika kita akan membuat web menggunakan nodejs.

Minimalist 
exspressjs sangat minimalist tidak memiliki banyak fitur seperti web framewrok di bahasa pemograman lain seperti laravel,ruby on rails atau django
karena sangat minimalist biasanya exspressjs akan di intergrasikan dengan banyak liberary nodejs lainnya
oleh karena itu programer bisa bebas memilih liberary nodejs yang ingin dia intregrasikan dengan exspressjs.

Application
saat kita membuat web menggunakan  exspressjs kita akan membuat object application 
application adalah object utama dalam liberary exspressjs.

Menjalankan Application
application secara default tidak berjalan jika kita ingin melakukan application kita perlu menggunakan method listen/port
dimana port adalah nomor yang ingin kita gunakan untuk menjalankan web 
pastikan port yang kita pilih tidak bentrok atau sama dengan application yang lain.

Basic Routing
Routing
saat kita membuat web biasanya kita akan membuat banyak sekali URL path
routing merupakan teknik yang di gunakan untuk meneruskan request dari URL path ke callback yang kita tuju
routing di expressjs bisa menggunakan object application dan menggunakan method sesuai dengan nama HTTP methodnya.

Routing Method 

app.connect(path, callback)   HTTP Method CONNECT
app.get(path, callback)       HTTP Method GET
app.post(path, callback)      HTTP Method POST
app.put(path, callback)       HTTP Method PUT
app.delete(path, callback)    HTTP Method DELETE
app.option(path, callback)    HTTP Method OPTION
app.trace(path, callback)     HTTP Method TRACE
app.head(path, callback)      HTTP Method HEAD
app.patch(path, callback)     HTTP Method PATCH
app.all(path, callback)       Semua HTTP METHOD 

Unit Test 
salah satu yang sulit ketika kita membuat aplikasi web yang harus berjalan yaitu melakukan automation test 
jika kita melakukan manual test terlihat mudah tingggal kita buka melalui web browser
namun dalam pekerjaanya sehari-hari lam bat lain hal ini akan sangat menyulitkan kita ketika kita harus melakukan manual test jika terdapata perubahan di aplikasi kita 
oleh karena itu sanagat di rekomendasikan menggunakan unit test walaupun dalam bentuk web.

Supertest
supertest adalah salah satu liuberary yang bisa digunakan untuk membantu melakukan pengetesan web expressjs 
dengan supertest kita bisa lebih mudah membuat unit test dibanding melakukan manualnya.

Request 
saat kita membuat callback di router,parameter pertama adalah object request yang secara otomatis diisi oleh expressjs
object request akan diisi informasi tentang HTTP request yang masuk ke callback tersebut 
ada banyak sekali informasi HTTP request yang bisa kita ambil dari object request seperti querry param ,header, body dan lain-lain.

Request URL
untuk mendapatkan URL saat ini kita bisa menggunakan object request untuk mendapatkan informasinya.

-req.originalURL: untuk mendapatkan url secara full beserta query paramnya
-req.path: untuk mendapatakan query URL tanpa param 
-req.hostname: untuk mendapatkan nama host atau domain dari web kita
-req.protocol: untuk mendapatkan protocol dari URL web kita
-req.secure: untuk mengecek apakah URLnya https atau bukan
-req.subdomain: untuk mendapatkan array subdomain dari URL web kita

Request Query Param
request juga bisa digunakan untuk mengambil data query parameter
secra otomatis query parameter akan di simpan dalam bentuk object di req.query.

Request Header 
object request juga bisa kita gunakan untuk mendapatkan informasi dari HTTP header dari request
kita bisa menggunakan method req.get(name) atau req.header(name) untuk mendapatkan header berdasarkan name khusus untuk HTTP header namenya adalah case insentive.

Response
pada callback routing expressjs terdapat parameter kedua yaitu response 
response merupkan object reperentasi darim HTTP response
kita bisa mengubah data HTTP response melalui object response tersebut

Response Status
saat kita ingin mengubah HTTP status dari HTTP response yang kita buat kita bisa menggunakan method res.status(code)

Response Header
kita juga bisa merubah HTTP response header dengan mernggunakan method res.set(name.value) atau res.header(name.value)
atau jika ingin langsung beberapa name kita bisa masukan dalam bentuk object ke dalam parameter namenya

Response Body 
untuk mengubah response body kita bisa menggunakan method res.send(body)
dimana parameter body bisa kita kirim dalam bentuk buffer atau string baik itu text,html,json dan lain-lain.

